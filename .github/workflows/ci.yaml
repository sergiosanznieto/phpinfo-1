name: CI
on: 
  push:
    branches:
      - santander
env:
  uuid: 772238
jobs:
  docker:
    runs-on: ubuntu-18.04
    steps:
      -
        name: checkout
        uses: actions/checkout@v2
      -
        name: build
        run: docker build --file Dockerfile --tag phpinfo:${uuid} .
      -
        name: run
        run: docker run -d --entrypoint /usr/bin/php --name phpinfo -p 80:8080 -v ${PWD}/src/index.php:/src/index.php:ro phpinfo:${uuid} -f src/index.php -S 0.0.0.0:8080
      -
        name: test
        run: while true; do sleep 10; curl localhost/src/index.php | grep phpinfo && break; done
  swarm:
    runs-on: ubuntu-18.04
    steps:
      -
        name: checkout
        uses: actions/checkout@v2
      -
        name: build
        run: docker build --file Dockerfile --tag phpinfo:${uuid} .
      -
        name: swarm
        run: docker swarm init
      -
        name: compose
        run: sed -i /node.role/s/worker/manager/ docker-compose.yaml
      -
        name: nodeport
        run: sed -i /8080:8080/s/8080/80/ docker-compose.yaml
      -
        name: image
        run: sed -i /image:.*phpinfo/s/image:.*$/image:' 'phpinfo:${uuid}/ docker-compose.yaml
      -
        name: deploy
        run: docker stack deploy -c docker-compose.yaml phpinfo
      -
        name: test
        run: while true; do sleep 10; curl $( ifconfig | grep eth0 -A 1 | awk /inet/'{ print $2 }' )/src/index.php | grep phpinfo && break; done
  kubernetes:
    runs-on: ubuntu-18.04
    steps:
      -
        name: checkout
        uses: actions/checkout@v2
      -
        name: build
        run: docker build --file Dockerfile --tag phpinfo:${uuid} .
      -
        name: kubernetes
        run: |
          git clone --single-branch -b v1.2 https://github.com/academiaonline/kubernetes ${uuid}
          source ${uuid}/bin/cluster/ubuntu18/install-docker-kubelet.sh
          source ${uuid}/bin/cluster/ubuntu18/install-leader.sh
          master=$( kubectl get node | awk /master/'{ print $1 }' )
          kubectl taint node $master node-role.kubernetes.io/master:NoSchedule-
      -
        name: image
        run: sed -i /image:.*phpinfo/s/image:.*$/image:' 'phpinfo:${uuid}/ kube-compose.yaml
      -
        name: nodeport
        run: |
          sed -i /port:/s/port:.*$/nodePort:' '30000/ kube-compose.yaml
          sed -i /type:/s/ClusterIP/NodePort/ kube-compose.yaml
      -
        name: deploy
        run: kubectl apply -f kube-compose.yaml
      -
        name: test
        run: while true; do sleep 10; curl $( ifconfig | grep eth0 -A 1 | awk /inet/'{ print $2 }' ):30000/src/index.php | grep phpinfo && break; done
  #openshift:
  

